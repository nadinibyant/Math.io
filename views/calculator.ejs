<!doctype html>
<html lang="en">

<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="csrf-token" content="your-csrf-token-value">
    <title>calculator page</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-9ndCyUaIbzAi2FUVXJi0CjmCapSmO7SnpJef0486qhLnuZ2cdeRhO02iuK6FUUVM" crossorigin="anonymous">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;600&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="/css/calculator.css">
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
</head>

<body>
    <nav class="navbar navbar-expand-lg">
        <div class="container-fluid mt-3">
            <a class="navbar-brand mt-3 text-light" href="/">Math.io</a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse"
                data-bs-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false"
                aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarSupportedContent">
                <ul class="navbar-nav ms-auto mb-2 mb-lg-0 mt-3">
                    <li class="nav-item">
                        <a class="nav-link active" href="/home"><button type="button"
                                class="btn btn-light btn-back fw-semibold">Back</button></a>
                    </li>
                    <li class="nav-item dropdown mt-2 text-light">
                        <a class="nav-link dropdown-toggle" href="#" role="button" data-bs-toggle="dropdown"
                            aria-expanded="false" id="username">
                        </a>
                        <ul class="dropdown-menu">
                            <li><a class="dropdown-item" href="/profile">edit profile</a></li>
                            <li><a class="dropdown-item" href="/logout" id="logout">sign out</a></li>
                        </ul>
                    </li>
                </ul>
            </div>
        </div>
    </nav>
    <main>
        <div class="container text-center mt-5 conten">
            <div class="row w-100 kotak">
                <div class="col kotak1">
                    <form class="form-signin p-5">
                        <h1 class="h5 mb-3 text-center fw-semibold text-white">Calculate</h1>
                        <div class="form-floating mb-3 hasil pt-3 fw-semibold" id="hasil">
                        </div>
                        <div class="form-floating mb-3">
                            <input type="number" class="form-control" id="number1" placeholder="name@example.com">
                            <label for="number1">number 1</label>
                        </div>
                        <div class="form-floating mb-3">
                            <input type="number" class="form-control" id="number2" placeholder="number">
                            <label for="number2">number 2</label>
                        </div>
                        <div class="row mx-auto mb-3">
                            <div class="col">
                                <input class="btn btn-light bg-white text-dark w-100 fw-semibold" type="button"
                                    value="+" id="penjumlahan">
                            </div>
                            <div class="col">
                                <input class="btn btn-light bg-white text-dark w-100 fw-semibold" type="button"
                                    value="x" id="perkalian">
                            </div>
                            <div class="col">
                                <input class="btn btn-light bg-white text-dark w-100 fw-semibold" type="button"
                                    value="%" id="modulus">
                            </div>
                            <div class="col">
                                <input class="btn btn-light bg-white text-dark w-100 fw-semibold" type="button"
                                    value="/" id="pembagian">
                            </div>
                            <div class="col">
                                <input class="btn btn-light bg-white text-dark w-100 fw-semibold" type="button"
                                    value="-" id="pengurangan">
                            </div>
                        </div>
                        <button class="w-100 btn btn-lg" type="submit">start</button>
                    </form>
                </div>
                <div class="col w-75 ms-5 kotak2">
                    <div class="p-5">
                        <h5 class="fw-semibold text-white mb-3">History</h5>
                        <div class="hasil2" id="hasil2">
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </main>
    <footer>
        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1440 320">
            <path fill="#ffffff" fill-opacity="1"
                d="M0,32L48,64C96,96,192,160,288,160C384,160,480,96,576,80C672,64,768,96,864,117.3C960,139,1056,149,1152,128C1248,107,1344,53,1392,26.7L1440,0L1440,320L1392,320C1344,320,1248,320,1152,320C1056,320,960,320,864,320C768,320,672,320,576,320C480,320,384,320,288,320C192,320,96,320,48,320L0,320Z">
            </path>
        </svg>
    </footer>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"
        integrity="sha384-geWF76RCwLtnZ8qwWowPQNguL3RmwHVBC9FhGdlKrxdiJJigb/j/68SIy3Te4Bkz" crossorigin="anonymous">
    </script>
    <script>
        document.addEventListener('DOMContentLoaded', async () => {
            let operations
            const penjumlahan = document.getElementById('penjumlahan')
            penjumlahan.addEventListener('click', async () => {
                operations = '+'
                const Toast = Swal.mixin({
                    toast: true,
                    position: 'top-end',
                    showConfirmButton: false,
                    timer: 3000,
                    timerProgressBar: true,
                    didOpen: (toast) => {
                        toast.addEventListener('mouseenter', Swal.stopTimer)
                        toast.addEventListener('mouseleave', Swal.resumeTimer)
                    }
                })

                Toast.fire({
                    icon: 'success',
                    title: 'Operation + Successfully Selected'
                })
            })
            const perkalian = document.getElementById('perkalian')
            perkalian.addEventListener('click', async () => {
                operations = 'x'
                const Toast = Swal.mixin({
                    toast: true,
                    position: 'top-end',
                    showConfirmButton: false,
                    timer: 3000,
                    timerProgressBar: true,
                    didOpen: (toast) => {
                        toast.addEventListener('mouseenter', Swal.stopTimer)
                        toast.addEventListener('mouseleave', Swal.resumeTimer)
                    }
                })

                Toast.fire({
                    icon: 'success',
                    title: 'Operation x Successfully Selected'
                })
            })
            const modulus = document.getElementById('modulus')
            modulus.addEventListener('click', async () => {
                operations = '%'
                const Toast = Swal.mixin({
                    toast: true,
                    position: 'top-end',
                    showConfirmButton: false,
                    timer: 3000,
                    timerProgressBar: true,
                    didOpen: (toast) => {
                        toast.addEventListener('mouseenter', Swal.stopTimer)
                        toast.addEventListener('mouseleave', Swal.resumeTimer)
                    }
                })

                Toast.fire({
                    icon: 'success',
                    title: 'Operation % Successfully Selected'
                })

            })
            const pembagian = document.getElementById('pembagian')
            pembagian.addEventListener('click', async () => {
                operations = '/'
                const Toast = Swal.mixin({
                    toast: true,
                    position: 'top-end',
                    showConfirmButton: false,
                    timer: 3000,
                    timerProgressBar: true,
                    didOpen: (toast) => {
                        toast.addEventListener('mouseenter', Swal.stopTimer)
                        toast.addEventListener('mouseleave', Swal.resumeTimer)
                    }
                })

                Toast.fire({
                    icon: 'success',
                    title: 'Operation / Successfully Selected'
                })
            })
            const pengurangan = document.getElementById('pengurangan')
            pengurangan.addEventListener('click', async () => {
                operations = '-'
                const Toast = Swal.mixin({
                    toast: true,
                    position: 'top-end',
                    showConfirmButton: false,
                    timer: 3000,
                    timerProgressBar: true,
                    didOpen: (toast) => {
                        toast.addEventListener('mouseenter', Swal.stopTimer)
                        toast.addEventListener('mouseleave', Swal.resumeTimer)
                    }
                })

                Toast.fire({
                    icon: 'success',
                    title: 'Operation - Successfully Selected'
                })
            })

            const form = document.querySelector('form')
            form.addEventListener('submit', async (event) => {
                event.preventDefault()

                const number1 = document.getElementById('number1').value
                const number2 = document.getElementById('number2').value
                const operation = operations

                const response = await fetch('/calculate', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        number1: number1,
                        number2: number2,
                        operation: operation
                    })
                })

                const data = await response.json()
                if (data.success) {
                    const Toast = Swal.mixin({
                        toast: true,
                        position: 'top-end',
                        showConfirmButton: false,
                        timer: 3000,
                        timerProgressBar: true,
                        didOpen: (toast) => {
                            toast.addEventListener('mouseenter', Swal.stopTimer)
                            toast.addEventListener('mouseleave', Swal.resumeTimer)
                        }
                    })

                    Toast.fire({
                        icon: 'success',
                        title: data.message
                    })

                    const hasil = document.getElementById('hasil')
                    hasil.textContent = `${number1} ${operation} ${number2} = ${data.hasil}`
                } else {
                    const Toast = Swal.mixin({
                        toast: true,
                        position: 'top-end',
                        showConfirmButton: false,
                        timer: 3000,
                        timerProgressBar: true,
                        didOpen: (toast) => {
                            toast.addEventListener('mouseenter', Swal.stopTimer)
                            toast.addEventListener('mouseleave', Swal.resumeTimer)
                        }
                    })

                    Toast.fire({
                        icon: 'error',
                        title: data.message
                    })
                }
            })

            const response = await fetch('/dataCal', {
                method: 'GET'
            })

            const data = await response.json()
            if (data.success) {
                const hasil2 = document.getElementById('hasil2')

                const calculateData = data.dataCal
                console.log(calculateData)

                for (let i = 0; i < calculateData.length; i++) {
                    const riwayat = document.createElement('div')
                    riwayat.classList.add('riwayat', 'mb-3')

                    const container = document.createElement('div')
                    container.classList.add('containter')

                    const row1 = document.createElement('div')
                    row1.classList.add('row', 'pt-3')

                    const col1 = document.createElement('div')
                    col1.classList.add('col', 'text-center')

                    const row2 = document.createElement('div')
                    row2.classList.add('row')

                    const col2 = document.createElement('div')
                    col2.classList.add('col')

                    const hr = document.createElement('hr')
                    hr.classList.add('border', 'border', 'border-dark', 'bg-dark', 'border-3', 'mx-auto')

                    const row3 = document.createElement('div')
                    row3.classList.add('row', 'text-center', 'mb-3')

                    const col3 = document.createElement('div')
                    col3.classList.add('col', 'fw-normal', 'mb-3')

                    const created_at = {
                        created_at: calculateData[i].created_at
                    }

                    const createdAtDate = new Date(created_at.created_at)
                    const tanggal = createdAtDate.getDate()
                    const bulan = createdAtDate.getMonth()
                    const tahun = createdAtDate.getFullYear()


                    hasil2.appendChild(riwayat)
                    riwayat.appendChild(container)
                    container.appendChild(row1)
                    row1.appendChild(col1)
                    col1.textContent = `${tanggal} - ${bulan} - ${tahun}`
                    container.appendChild(row2)
                    row2.appendChild(col2)
                    col2.appendChild(hr)
                    container.appendChild(row3)
                    row3.appendChild(col3)
                    col3.textContent = `${calculateData[i].number1} ${calculateData[i].operation} ${calculateData[i].number2} = ${calculateData[i].hasil}`
                }
            } else {
                const Toast = Swal.mixin({
                    toast: true,
                    position: 'top-end',
                    showConfirmButton: false,
                    timer: 3000,
                    timerProgressBar: true,
                    didOpen: (toast) => {
                        toast.addEventListener('mouseenter', Swal.stopTimer)
                        toast.addEventListener('mouseleave', Swal.resumeTimer)
                    }
                })

                Toast.fire({
                    icon: 'error',
                    title: data.message
                })
            }

            const username = document.getElementById('username')
            const responseUsername = await fetch('/username', {
                method:'GET'
            })
            const dataUsername = await responseUsername.json()
            if(dataUsername.success){
                username.textContent = `${dataUsername.username}`
            } else {
                window.location.href = '/login'
            }

            const btnLogout = document.getElementById('logout');
            btnLogout.addEventListener('click', async function (event) {
                event.preventDefault()

                const form = document.createElement('form');
                form.method = 'POST';
                form.action = '/logout';

                const csrfToken = document.querySelector('meta[name="csrf-token"]').content;
                const csrfInput = document.createElement('input');
                csrfInput.type = 'hidden';
                csrfInput.name =
                    '_csrf'; 
                csrfInput.value = csrfToken;
                form.appendChild(csrfInput);

                document.body.appendChild(form);
                form.submit();

                try {
                    const response = await fetch('/logout', {
                        method: 'POST'
                    });
                    const data = await response.json();

                    if (data.success) {
                        window.location.href = '/login';
                    } else {
                        console.log(data.message);
                        location.reload()
                    }
                } catch (error) {
                    console.log(error);
                }
            })
        })
    </script>
</body>

</html>