<!doctype html>
<html lang="en">

<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="csrf-token" content="your-csrf-token-value">
    <title>profile page</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-9ndCyUaIbzAi2FUVXJi0CjmCapSmO7SnpJef0486qhLnuZ2cdeRhO02iuK6FUUVM" crossorigin="anonymous">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;600&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="/css/profile.css">
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

</head>

<body>
    <nav class="navbar navbar-expand-lg">
        <div class="container-fluid mt-3">
            <a class="navbar-brand mt-3 text-light" href="/home">Math.io</a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse"
                data-bs-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false"
                aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarSupportedContent">
                <ul class="navbar-nav ms-auto mb-2 mb-lg-0 mt-3">
                    <li class="nav-item">
                        <a class="nav-link active" href="/home"><button type="button"
                                class="btn btn-light btn-back fw-semibold">Back</button></a>
                    </li>
                    <li class="nav-item dropdown mt-2 text-light">
                        <a class="nav-link dropdown-toggle" href="#" role="button" data-bs-toggle="dropdown"
                            aria-expanded="false" id="usernameTampil">
                        </a>
                        <ul class="dropdown-menu">
                            <li><a class="dropdown-item" href="/profile">edit profile</a></li>
                            <li><a class="dropdown-item" href="/logout" id="logout">sign out</a></li>
                        </ul>
                    </li>
                </ul>
            </div>
        </div>
    </nav>
    <main class="form-signin w-100 m-auto mt-5">
        <form action="/editProfile" method="post">
            <h1 class="h3 mb-3 text-center">Edit Profile</h1>
            <div class="form-floating mb-3">
                <input type="text" class="form-control" id="username" placeholder="username">
                <label for="username">Username</label>
            </div>
            <div class="form-floating mb-3">
                <input type="email" class="form-control" id="email" placeholder="name@example.com">
                <label for="email">Email</label>
            </div>
            <div class="form-floating mb-3">
                <p class="text-white fw-semibold ms-2" style="font-size: 80%;">if want change your password</p>
            </div>
            <div class="form-floating mb-3">
                <input type="password" class="form-control" id="oldPassword" placeholder="Password">
                <label for="oldPassword">Old Password</label>
            </div>
            <div class="form-floating mb-3">
                <input type="password" class="form-control" id="newPassword" placeholder="Password">
                <label for="newPassword">New Password</label>
            </div>
            <button class="w-100 btn btn-lg" type="submit">save</button>
        </form>
    </main>
    <footer>
        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1440 320">
            <path fill="#ffffff" fill-opacity="1"
                d="M0,32L48,64C96,96,192,160,288,160C384,160,480,96,576,80C672,64,768,96,864,117.3C960,139,1056,149,1152,128C1248,107,1344,53,1392,26.7L1440,0L1440,320L1392,320C1344,320,1248,320,1152,320C1056,320,960,320,864,320C768,320,672,320,576,320C480,320,384,320,288,320C192,320,96,320,48,320L0,320Z">
            </path>
        </svg>
    </footer>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"
        integrity="sha384-geWF76RCwLtnZ8qwWowPQNguL3RmwHVBC9FhGdlKrxdiJJigb/j/68SIy3Te4Bkz" crossorigin="anonymous">
    </script>
    <script>
        document.addEventListener('DOMContentLoaded', async () => {


            const form = document.querySelector('form')
            form.addEventListener('submit', async (event) => {
                event.preventDefault()

                const username = document.getElementById('username').value
                const email = document.getElementById('email').value
                const oldPassword = document.getElementById('oldPassword').value
                const newPassword = document.getElementById('newPassword').value

                const response = await fetch('/editProfile', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        username: username,
                        email: email,
                        oldPassword: oldPassword,
                        newPassword: newPassword
                    })
                })

                const data = await response.json()
                if (data.success == true) {
                    const Toast = Swal.mixin({
                        toast: true,
                        position: 'top-end',
                        showConfirmButton: false,
                        timer: 3000,
                        timerProgressBar: true,
                        didOpen: (toast) => {
                            toast.addEventListener('mouseenter', Swal.stopTimer)
                            toast.addEventListener('mouseleave', Swal.resumeTimer)
                        }
                    })

                    Toast.fire({
                        icon: 'success',
                        title: data.message
                    })
                    setTimeout(() => {
                        window.location.href = '/profile'
                    }, 1000);
                } else if (data.success == false) {
                    const Toast = Swal.mixin({
                        toast: true,
                        position: 'top-end',
                        showConfirmButton: false,
                        timer: 3000,
                        timerProgressBar: true,
                        didOpen: (toast) => {
                            toast.addEventListener('mouseenter', Swal.stopTimer)
                            toast.addEventListener('mouseleave', Swal.resumeTimer)
                        }
                    })

                    Toast.fire({
                        icon: 'error',
                        title: data.message
                    })
                    setTimeout(() => {
                        window.location.href = '/profile'
                    }, 1000);
                } else if (data.success == 'berhasil') {
                    Swal.fire({
                        icon: 'success',
                        title: data.message
                    })
                    setTimeout(() => {
                        window.location.href = '/login';
                    }, 1000);
                }
            })

            const username2 = document.getElementById('username')
            const email2 = document.getElementById('email')

            const responseGetData = await fetch('/dataProfile', {
                method: 'GET'
            })

            const getData = await responseGetData.json()
            if (getData.success) {
                username2.setAttribute('value', `${getData.username}`)
                email2.setAttribute('value', `${getData.email}`)
            }

            const usernameTampil = document.getElementById('usernameTampil')
            const responseUsername = await fetch('/username', {
                method: 'GET'
            })
            const dataUsername = await responseUsername.json()
            if (dataUsername.success) {
                usernameTampil.textContent = `${dataUsername.username}`
            }

            const btnLogout = document.getElementById('logout');
            btnLogout.addEventListener('click', async function (event) {
                event.preventDefault()

                const form = document.createElement('form');
                form.method = 'POST';
                form.action = '/logout';

                const csrfToken = document.querySelector('meta[name="csrf-token"]').content;
                const csrfInput = document.createElement('input');
                csrfInput.type = 'hidden';
                csrfInput.name =
                    '_csrf';
                csrfInput.value = csrfToken;
                form.appendChild(csrfInput);

                document.body.appendChild(form);
                form.submit();

                try {
                    const response = await fetch('/logout', {
                        method: 'POST'
                    });
                    const data = await response.json();

                    if (data.success) {
                        window.location.href = '/login';
                    } else {
                        console.log(data.message);
                        location.reload()
                    }
                } catch (error) {
                    console.log(error);
                }
            })
        })
    </script>
</body>

</html>